<html>
<head>
<title>TDrawMode</title>
<link rel="stylesheet" href="../../../../Styles/Default.css">
</head>

<body bgcolor="#FFFFFF">
<p class="Decl"><b>type</b> TDrawMode = (dmOpaque, dmBlend, dmCustom);</p>
<h2>Description</h2>
<p class="Body"><span class="EmptyRef">TDrawMode</span> defines how the bitmap 
  is combined with the backgrownd. This is the type for <a href="../../GR32/Classes/TBitmap32/Properties/DrawMode.htm">DrawMode</a> 
  property of <a href="../../GR32/Classes/TBitmap32/_Body.htm">TBitmap32</a> class, and 
  it is also passed as parameter in <a href="../../GR32_Transforms/Routines/BlockTransfer.htm">BlockTransfer</a> 
  and <a href="../../GR32_Transforms/Routines/StretchTransfer.htm">StretchTransfer</a> 
  functions.</p>
<ul>
  <li>dmOpaque – a color information from the foreground image completely replaces 
    the background data;</li>
  <li>dmBlend – foreground and background colors are blended together using per-pixel 
    opacity of the foreground bitmap (stored in its alpha channel), multiplied 
    by its <a href="../../GR32/Classes/TBitmap32/Properties/MasterAlpha.htm">MasterAlpha</a>;</li>
  <li>dmCustom – colors are mixed using <a href="../../GR32/Classes/TBitmap32/Events/OnPixelCombine.htm">OnPixelCombine</a> 
    event, that is essentially a call-back function allowing for any custom blending 
    routine.</li>
</ul>
</body>
</html>
