<html>
<head>
<title>Assign</title>
<link rel="stylesheet" href="../../../../../../Styles/Default.css" type="text/css">
</head>

<body bgcolor="#FFFFFF">
<p class="Decl"><b>procedure</b> Assign(Source: TPersistent); <b>override</b>;</p>
<h2>Description</h2>
<p class="Body">Copies data from another object, specified by the <span class="EmptyRef">Source</span> 
  parameter.</p>
<p class="Body">This method supports following classes:</p>
<ul>
  <li><i>nil</i> &#150; assigns an empty data array;</li>
  <li><a href="../_Body.htm">TByteMap</a> &#150; copies data bytes from another 
    byte map;</li>
  <li><a href="../_Body.htm">TBitmap32</a> &#150; transforms bitmap data using 
    the <a href="ReadFrom.htm">ReadFrom</a> method with ctWeightedRGB conversion 
    type.</li>
</ul>
<p class="Body"><a href="../_Body.htm">TByteMap</a> also overrides the protected 
  AssignTo method, making it possible to assign bitmaps from byte maps, so that 
  both following lines are correct: </p>
<p class="Code">ByteMap.Assign(Bitmap32); <span class="Comment">// an analog to 
  BM := Intensity(B32);</span></p>
<p class="Code">Bitmap32.Assign(ByteMap); <span class="Comment">// an analog to 
  B32 := Gray32(BM);</span></p>
</body>
</html>
